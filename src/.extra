#!/usr/bin/env bash

# My Directory Shortcuts
alias wtf="cd ~/Projects/what_the_far"
alias dotfiles="cd ~/Projects/what_the_far/dotfiles"
alias scg="cd ~/Projects/scgwedotech"
alias thinc="cd ~/Projects/thinc"
alias cleverse="cd ~/Projects/cleverse"
alias exp="cd ~/Projects/experimental"

# Editors
alias svim='nvim -u ~/.SpaceVim/vimrc'

# Please
alias please='sudo $(fc -ln -1)'

# docker
alias dk="docker"

# docker-compose
alias dcp="docker-compose"
alias dcpp="docker-compose -f docker-compose.yml -f docker-compose.prod.yml"

# gitignore.io API
function gi() {
    curl -sL "https://www.gitignore.io/api/$@" ;
}

# Fetch all git recursively
function gitfetchall() {
    find . -type d -name .git \
        -exec echo "$(tput setaf 34)--- Fetching {} ---$(tput sgr0)" \; \
        -execdir git fetch --all \; \
        -exec echo \;
}

# Delete and create tag remotely
function gittag() {
    RESET=`tput sgr0`
    GREEN=`tput setaf 34`
    BLUE=`tput setaf 32`

    return

    for tag in "$@"; do

        echo -e "$GREEN== TAG: $tag $RESET"

        echo -e "$BLUE--- Delete a local Git tag $tag ---$RESET"
        git tag -d $tag
        echo
        for  remote in $(git remote); do
            echo -e "$BLUE--- Delete a Git tag $tag from the remote $remote ---$RESET"
            git push --delete $remote $tag
        done

        echo
        echo -e "$BLUE--- Create a new local tag $tag ---$RESET"
        git tag $tag
        echo
        for  remote in $(git remote); do
            echo -e "$BLUE--- Push the tag to remote $tag ---$RESET"
            git push origin $tag
        done
done
}

# Git credentials
# Not in the repository, to prevent people from accidentally committing under my name
GIT_AUTHOR_NAME="WhatTheFar"
GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
git config --global user.name "$GIT_AUTHOR_NAME"
GIT_AUTHOR_EMAIL="jakpat.m@gmail.com"
GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
git config --global user.email "$GIT_AUTHOR_EMAIL"

# Work around "pyenv: gettext.sh: command not found"
# Issue : shims do not work with gettext (.pyenv/shims/gettext.sh) #688 https://github.com/pyenv/pyenv/issues/688
export GIT_INTERNAL_GETTEXT_TEST_FALLBACKS=1

